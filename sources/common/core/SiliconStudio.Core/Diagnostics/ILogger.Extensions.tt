<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
// Copyright (c) 2012-2017 Silicon Studio Corp. All rights reserved. (https://www.siliconstudio.co.jp)
// See LICENSE.md for full license information.
//
// File AUTO-GENERATED, do not edit!
using System;
using SiliconStudio.Core.Annotations;

namespace SiliconStudio.Core.Diagnostics
{
    /// <summary>
    /// Extensions for <see cref="ILogger"/>.
    /// </summary>
    public static class LoggerExtensions
    {
<# foreach(var name in new string[] { "Verbose", "Debug", "Info", "Warning", "Error", "Fatal" }) {#>
        /// <summary>
        /// Logs the specified <#= name.ToLowerInvariant() #> message with an exception.
        /// </summary>
        /// <param name="logger">The logger.</param>
        /// <param name="message">The <#= name.ToLowerInvariant() #> message.</param>
        /// <param name="exception">An exception to log with the message.</param>
        /// <param name="callerInfo">Information about the caller. Default is null, otherwise use <see cref="CallerInfo.Get"/>.</param>
        public static void <#= name #>([NotNull] this ILogger logger, string message, Exception exception, CallerInfo callerInfo = null)
        {
            logger.Log(new LogMessage(logger.Module, LogMessageType.<#= name #>, message, exception, callerInfo));
        }

        /// <summary>
        /// Logs the specified <#= name.ToLowerInvariant() #> message.
        /// </summary>
        /// <param name="logger">The logger.</param>
        /// <param name="message">The <#= name.ToLowerInvariant() #> message.</param>
        /// <param name="callerInfo">Information about the caller. Default is null, otherwise use <see cref="CallerInfo.Get"/>.</param>
        public static void <#= name #>([NotNull] this ILogger logger, string message, CallerInfo callerInfo = null)
        {
            <#= name #>(logger, message, null, callerInfo);
        }
<#}#>
    }
}
