// Copyright (c) 2014-2017 Silicon Studio Corp. All rights reserved. (https://www.siliconstudio.co.jp)
// See LICENSE.md for full license information.
namespace SiliconStudio.Xenko.Rendering.Materials
{
    /// <summary>
    /// Converts diffuse color
    /// </summary>
    shader MaterialSurfaceDiffuseCarPaint : IMaterialSurfacePixel,    
                                            MaterialPixelShadingStream,
                                            Transformation,
                                            PositionStream4,
                                            BRDFMicrofacet
    {
        compose ComputeColor diffuseMap;
        compose ComputeColor metalFlakesDiffuseMap;

        override void Compute()
        {
            var colorBase = diffuseMap.Compute();    
            var flakeColorBase = metalFlakesDiffuseMap.Compute();

            // Interpolate the factors using the surface to camera distance
            float LOD = saturate(distance(Eye.xyz, streams.PositionWS.xyz) * 2.0f);
            colorBase = lerp(flakeColorBase, colorBase, LOD);

            streams.matDiffuse = colorBase;

            // Because matDiffuse can be modified when using a metalness, we are storing the colorBase into matColorBase
            // so that we are able to query the original diffuse color without any modifications.
            streams.matColorBase = colorBase;
        }
    };
}
