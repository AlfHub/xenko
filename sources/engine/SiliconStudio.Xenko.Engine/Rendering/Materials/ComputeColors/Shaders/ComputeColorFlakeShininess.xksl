// Copyright (c) 2014-2017 Silicon Studio Corp. All rights reserved. (https://www.siliconstudio.co.jp)
// See LICENSE.md for full license information.
shader ComputeColorFlakeShininess : ComputeColor, 
                                    CarPaintCommon,
                                    DynamicTextureStream<TStream>,
                                    MaterialPixelShadingStream
{
    compose ComputeColor flake_scale;
    compose ComputeColor flake_size;
    compose ComputeColor flake_size_variance;
    compose ComputeColor pearlescent_ratio;
    
    compose ComputeColor flake_base_color;

    override float Compute()
    {
        const float flakeBaseShininess = flake_base_color.Compute().r;
        const float flakeScale = flake_scale.Compute().r;
        const float flakeSize = flake_size.Compute().r;
        const float flakeSizeVariance = flake_size_variance.Compute().r;
        const float flakePearlescentRatio = pearlescent_ratio.Compute().r;
        const float4 flakeParameters = float4( flakeScale, flakeSize, flakeSizeVariance, flakePearlescentRatio );

        return lerp( flakeBaseShininess, GenerateFlakeShininess(streams.TexCoord, flakeParameters, flakeBaseShininess), streams.NdotL);
    }
};
