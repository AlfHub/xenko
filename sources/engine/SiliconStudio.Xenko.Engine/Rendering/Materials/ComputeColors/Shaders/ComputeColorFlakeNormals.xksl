// Copyright (c) 2014-2017 Silicon Studio Corp. All rights reserved. (https://www.siliconstudio.co.jp)
// See LICENSE.md for full license information.
shader ComputeColorFlakeNormals : ComputeColor, 
                                  CarPaintCommon,
                                  DynamicTextureStream<TStream>,
                                  MaterialPixelShadingStream
{
    compose ComputeColor FlakeScaleSizeSize_VarianceFlake_Sparkle_Strength;

    override float4 Compute()
    {
        const float4 flakeGenerationParameters = FlakeScaleSizeSize_VarianceFlake_Sparkle_Strength.Compute().rgba;
        const float3 baseNormal = float3(0.0f, 0.0f, 1.0f);

        float3 randomFlakeNormal = GenerateRandomFlakeNormal(streams.TexCoord, flakeGenerationParameters, baseNormal);
        float3 flakeNormal = normalize(lerp(baseNormal, randomFlakeNormal, flakeGenerationParameters.a));

        return float4(flakeNormal, 0.0f);
    }
};
