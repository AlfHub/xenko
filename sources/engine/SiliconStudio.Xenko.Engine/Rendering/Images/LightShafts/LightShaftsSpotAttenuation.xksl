// Copyright (c) 2017 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Xenko.Rendering.Images
{
    shader LightShaftsSpotAttenuation : LightShaftsAttenuation, LightStream, LightUtil
    {
        stage float3 AngleOffsetAndInvSquareRadius;

        override float Compute(float3 position)
        {
            float3 lightVector = streams.lightPositionWS - position;
            float lightVectorLength = length(lightVector);
            float3 lightVectorNorm = lightVector / lightVectorLength;

            float3 lightAngleOffsetAndInvSquareRadius = AngleOffsetAndInvSquareRadius;
            float2 lightAngleAndOffset = lightAngleOffsetAndInvSquareRadius.xy;
            float lightInvSquareRadius = lightAngleOffsetAndInvSquareRadius.z;

            // TODO: Add support for disk based Directional light
            float3 lightDirection = -streams.lightDirectionWS;

            float attenuation = 1;
            attenuation *= GetDistanceAttenuation(lightVector , lightInvSquareRadius);
            attenuation *= GetAngleAttenuation(lightVectorNorm, lightDirection, lightAngleAndOffset.x, lightAngleAndOffset.y);

            return GetDistanceAttenuation(lightVector, lightInvSquareRadius);
        }
    };
}