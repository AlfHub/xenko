// Copyright (c) 2014-2016 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Xenko.Rendering.Images
{
    shader RangeCompressorShader : ImageEffectShader
    {
        stage override float4 Shading()
        {
            float3 color = Texture0.Sample(PointSampler, streams.TexCoord).rgb;

            // compute luma from HDR value:
            float3 ntsc = float3(0.2126, 0.7152, 0.0722);
            float relativeLuminance = dot(ntsc, color);
            float perceptiveLuma = sqrt(relativeLuminance);

            // tone to "non-lossy" LDR:
            float targetRange = 1.0;
            float maxComponent = max(max(color.r, color.g), color.b);
            float3 karis = color / (1 + maxComponent / targetRange);

            float3 mapped = karis;  // no gamma. because of big outlining artefact around [0-1] range objects in front of high [10-80] range emissive objects.
            // apply gamma:
            //float3 mapped = karis * karis;
            //float3 mapped = pow(karis, 2.2);

            // write output for FXAA:
            return float4(mapped, perceptiveLuma);
        }
    };
}

