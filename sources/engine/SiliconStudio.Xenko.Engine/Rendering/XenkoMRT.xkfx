// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
using SiliconStudio.Xenko.Rendering.Data;
using SiliconStudio.Xenko.Rendering.Materials;

namespace SiliconStudio.Xenko.Rendering
{
    effect XenkoMRT
    {
		using params XenkoMRTKeys;

        // -----------------------------------------------
        // MRT extensions
        // -----------------------------------------------
        ShaderSourceCollection targetExtensions = XenkoMRTKeys.RenderTargetExtensions;
        if (targetExtensions != null)
        {       
            mixin macro RENDER_TARGET_COUNT = targetExtensions.Count + 1;
            int slot = 1;
            foreach (ShaderSource renderTargetExtension in targetExtensions)
            {
                if (renderTargetExtension != null)
                {
                    switch (slot)
                    {
                        case 1: mixin compose ShadingColor1 = (renderTargetExtension); break;
                        case 2: mixin compose ShadingColor2 = (renderTargetExtension); break;
                        case 3: mixin compose ShadingColor3 = (renderTargetExtension); break;
                        case 4: mixin compose ShadingColor4 = (renderTargetExtension); break;
                        case 5: mixin compose ShadingColor5 = (renderTargetExtension); break;
                        case 6: mixin compose ShadingColor6 = (renderTargetExtension); break;
                        case 7: mixin compose ShadingColor7 = (renderTargetExtension); break;
                        case 8: mixin compose ShadingColor8 = (renderTargetExtension); break;
                    }
                }
                ++slot;
            }
        }
    }
}
